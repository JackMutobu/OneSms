@page "/ussdadmin"
@using UssdAction = OneSms.Domain.UssdAction;
@using UssdActionStep = OneSms.Domain.UssdActionStep;
@inherits ReactiveComponentBase<UssdAdminViewModel>
@attribute [Authorize(Roles = "SuperAdmin")]
    <PageHeader BackIcon="string.Empty">
        <PageHeaderTitle>@(ViewModel.CurrentNetwork?.Name ?? "All networks") - @(ViewModel.CurrentActionType?.ToString("G") ?? "Ussd")</PageHeaderTitle>
        <PageHeaderExtra>
            <Select DefaultValue=@("-1") Loading="ViewModel.IsBusy" Style="width:100px" OnChange="OnNetworkChange">
                <SelectOption Value="-1">All</SelectOption>
                @foreach (var network in ViewModel.Networks)
                {
                    <SelectOption Value="@network.Id.ToString()">@network.Name</SelectOption>
                }
            </Select>
            <Select DefaultValue=@("-1") Loading="ViewModel.IsBusy" Style="width:120px" OnChange="OnUssdActionTypeChange">
                <SelectOption Value="-1">All</SelectOption>
                @foreach (var ussd in ViewModel.UssdActionTypes)
                {
                    <SelectOption Value="@(((int)ussd).ToString())">@ussd</SelectOption>
                }
            </Select>
            <Button Type="@ButtonType.Primary" @onclick="() => ShowUssdModal(ussdAction)">Add</Button>
        </PageHeaderExtra>
    </PageHeader>
    <Text Type="danger">@ViewModel.Errors</Text>
    <Table DataSource="@ViewModel.UssdActions" Class="table-responsive">
        <Column @bind-Field="@context.Name"></Column>
        <Column @bind-Field="@context.UssdNumber"></Column>
        <Column @bind-Field="@context.ActionType"></Column>
        <Column @bind-Field="@context.KeyLogins"></Column>
        <Column @bind-Field="@context.KeyProblems"></Column>
        @if (context.Network != null)
        {
            <ActionColumn Title="Network name">
                <Column Title="Network name" @bind-Field="@context.Network.Name"></Column>
            </ActionColumn>
        }
        <ActionColumn Title="Acton">
            <Space Size="middle">
                <SpaceItem>
                    <Button Type="primary" @onclick="() => ShowUssdStepModal(context)">Steps</Button>
                </SpaceItem>
                <SpaceItem>
                    <Button @onclick="() => ShowUssdModal(context)">Edit</Button>
                </SpaceItem>
                <SpaceItem>
                    <Button Type="danger" @onclick="() => DeleteUssd(context)">Delete</Button>
                </SpaceItem>
            </Space>
        </ActionColumn>
    </Table>
    <Modal Title="@("Add or modify ussd")" OnCancel="HideModal" Visible="@ussdModalVisible" Footer="null">
        <Form Model="ussdAction" OnFinish="Save" LabelCol="new ColLayoutParam { Span = 8 }" WrapperCol="new ColLayoutParam { Span = 16 }">
            <FormItem Label="Name">
                <Input @bind-Value="@context.Name" />
            </FormItem>
            <FormItem Label="Ussd">
                <Input @bind-Value="@context.UssdNumber" />
            </FormItem>
            <FormItem Label="Key Logins">
                <Input @bind-Value="@context.KeyLogins" />
            </FormItem>
            <FormItem Label="Key Problems">
                <Input @bind-Value="@context.KeyProblems" />
            </FormItem>
            <FormItem Label="Network">
                <Select DefaultValue="@(context.NetworkId.ToString())" OnChange="OnNetworkModalChange">
                    @foreach (var network in ViewModel.Networks)
                    {
                        <SelectOption Value="@network.Id.ToString()">@network.Name</SelectOption>
                    }
                </Select>
            </FormItem>
            <FormItem Label="Action Type">
                <Select DefaultValue=@(((int)context.ActionType).ToString()) OnChange="OnUssdActionModalTypeChange">
                    @foreach (var ussd in ViewModel.UssdActionTypes)
                    {
                        <SelectOption Value="@(((int)ussd).ToString())">@ussd</SelectOption>
                    }
                </Select>
            </FormItem>
            <FormItem WrapperCol="new ColLayoutParam{ Offset = 8, Span = 16 }">
                <Space>
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary" HtmlType="submit">Save</Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Button @onclick="() => ussdAction = new UssdAction()">Clear</Button>
                    </SpaceItem>
                </Space>
            </FormItem>
        </Form>
    </Modal>
    <Modal Title="@("USSD steps")" OnCancel="HideModal" Visible="@ussdModalActionStep" Footer="null">
        <Table DataSource="@ViewModel.UssdStepActions" Class="table-responsive">
            <Column @bind-Field="@context.Name"></Column>
            <Column @bind-Field="@context.Value"></Column>
            <Column @bind-Field="@context.IsPlaceHolder"></Column>
            <Column @bind-Field="@context.CanSkipe"></Column>
            <ActionColumn Title="Acton">
                <Space Size="middle">
                    <SpaceItem>
                        <Button @onclick="() => ShowUssdStepEditModal(context)">Edit</Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Button Type="danger" @onclick="() => DeleteUssdStep(context)">Delete</Button>
                    </SpaceItem>
                </Space>
            </ActionColumn>
        </Table>
        <Button Type="primary" @onclick="() => ShowUssdStepEditModal(ussdActionStep)">Add</Button>
    </Modal>
    <Modal Title="@("Add or modify ussd step")" OnCancel="HideModal" Visible="@ussdModalEditActionStep" Footer="null">
        <Form Model="ussdActionStep" OnFinish="SaveUssdStep" LabelCol="new ColLayoutParam { Span = 8 }" WrapperCol="new ColLayoutParam { Span = 16 }">
            <FormItem Label="Name">
                <Input @bind-Value="@context.Name" />
            </FormItem>
            <FormItem Label="Value">
                <Input @bind-Value="@context.Value" />
            </FormItem>
            <FormItem Label="Can Skipe">
                <Checkbox @bind-Value="@context.CanSkipe" />
            </FormItem>
            <FormItem Label="Is Placeholder">
                <Checkbox @bind-Value="@context.IsPlaceHolder" />
            </FormItem>
            <FormItem WrapperCol="new ColLayoutParam{ Offset = 8, Span = 16 }">
                <Space>
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary" HtmlType="submit">Save</Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Button @onclick="() => ussdActionStep = new UssdActionStep()">Clear</Button>
                    </SpaceItem>
                </Space>
            </FormItem>
        </Form>
    </Modal>
